<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:RepositoryDialog.Shell"
    xmlns:svc="clr-namespace:Repository.Services;assembly=Repository.Services"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:vsui="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0">

    <SolidColorBrush x:Key="Theme.Environment.Background">#FF252526</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.Environment.Foreground">#FFF1F1F1</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.Environment.BorderBrush">#FF595959</SolidColorBrush>

    <SolidColorBrush x:Key="Theme.Button.Background" Color="#FF252526" />
    <SolidColorBrush x:Key="Theme.Button.Foreground">#FFF1F1F1</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.Button.BorderBrush">#FF434346</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.Button.HoverBorderBrush">#FF007ACC</SolidColorBrush>

    <SolidColorBrush x:Key="Theme.ComboBox.Background" Color="Transparent" />
    <SolidColorBrush x:Key="Theme.ComboBox.Foreground">#FFF1F1F1</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.ComboBox.BorderBrush">#FF252526</SolidColorBrush>

    <SolidColorBrush x:Key="Theme.CheckBox.Background" Color="#FF252526" />
    <SolidColorBrush x:Key="Theme.CheckBox.Foreground">#FFF1F1F1</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.CheckBox.BorderBrush">#FF434346</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.CheckBox.HoverBorderBrush">#FF007ACC</SolidColorBrush>

    <SolidColorBrush x:Key="Theme.Label.Background" Color="Transparent" />
    <SolidColorBrush x:Key="Theme.Label.Foreground">#FFF1F1F1</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.Label.BorderBrush">#FF252526</SolidColorBrush>

    <SolidColorBrush x:Key="Theme.TextBox.Background" Color="Transparent" />
    <SolidColorBrush x:Key="Theme.TextBox.Foreground">#FFF1F1F1</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.TextBox.BorderBrush">#FF434346</SolidColorBrush>
    <SolidColorBrush x:Key="Theme.TextBox.CaretBrush">#EEE2E2E2</SolidColorBrush>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FF252526" />
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FFF1F1F1" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF252526" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    <sys:Double x:Key="Theme.Environment.FontSize">12</sys:Double>
    <sys:Double x:Key="Theme.Environment.TitleFontSize">48</sys:Double>
    <FontWeight x:Key="Theme.Environment.FontWeight">Regular</FontWeight>
    <FontWeight x:Key="Theme.Environment.TitleFontWeight">Light</FontWeight>
    <FontFamily x:Key="Theme.Environment.FontFamily">Leelawadee UI</FontFamily>

    <ObjectDataProvider
        x:Key="OutputTypeDataProvider"
        MethodName="GetValues"
        ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="shell:OutputType" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider
        x:Key="ProjectTypeDataProvider"
        MethodName="GetValues"
        ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="svc:ProjectType" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!--<Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.Environment.BorderBrush}" />
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
    </Style>-->

    <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="DarkGoldenrod" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid Background="Transparent">
                            <ContentPresenter />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogWindowBaseStyle" TargetType="{x:Type ui:DialogWindow}">
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.Environment.BorderBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
    </Style>

    <Style x:Key="GridBaseStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static ui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" />
    </Style>

    <Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="7,0,7,0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.TextBox.Foreground}" />
        <Setter Property="Background" Value="{StaticResource Theme.TextBox.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.TextBox.BorderBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource Theme.TextBox.CaretBrush}" />
    </Style>

    <Style x:Key="HoverBorderStyle" TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Theme.Button.HoverBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="55" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LabelBaseStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="Background" Value="{StaticResource Theme.Label.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Label.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.Label.BorderBrush}" />
    </Style>

    <Style x:Key="CheckBoxBaseStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.CheckBox.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.CheckBox.BorderBrush}" />
        <Setter Property="Background" Value="{StaticResource Theme.CheckBox.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Margin="1"
                                    Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
                                    Fill="{StaticResource Theme.CheckBox.Foreground}"
                                    Opacity="0"
                                    Stretch="None" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Margin="2"
                                    Fill="{StaticResource Theme.CheckBox.Foreground}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle
                                                        Margin="14,0,0,0"
                                                        SnapsToDevicePixels="True"
                                                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                        StrokeDashArray="1 2"
                                                        StrokeThickness="1" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource Theme.CheckBox.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource Theme.CheckBox.HoverBorderBrush}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource Theme.CheckBox.Foreground}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource Theme.CheckBox.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource Theme.CheckBox.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FFBCBCBC" />
                            <Setter TargetName="optionMark" Property="Fill" Value="#FF707070" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="#FF707070" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="#FFD9ECFF" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FF3C77DD" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource Theme.CheckBox.Foreground}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource Theme.CheckBox.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="{StaticResource Theme.Environment.Foreground}" />
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Theme.Label.Foreground}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.TitleFontWeight}" />
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.TitleFontSize}" />
    </Style>

    <Style x:Key="DataGridTextColumnCellEditStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
    </Style>

    <Style x:Key="DataGridComboBoxColumnCellEditStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.Environment.BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="False">
                <!--<Setter Property="BorderBrush" Value="{StaticResource Theme.Environment.BorderBrush}" />-->
                <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
                <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="False">
                <!--<Setter Property="BorderBrush" Value="{StaticResource Theme.Environment.BorderBrush}" />-->
                <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
                <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="6" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.Environment.BorderBrush}" />
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
    </Style>


    <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="BorderBrush" Value="{StaticResource Theme.Environment.BorderBrush}" />
        <Setter Property="Background" Value="{StaticResource Theme.Environment.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.Environment.Foreground}" />
        <Setter Property="FontFamily" Value="{StaticResource Theme.Environment.FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Theme.Environment.FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource Theme.Environment.FontWeight}" />
    </Style>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}" />


    <Style BasedOn="{StaticResource DialogWindowBaseStyle}" TargetType="{x:Type ui:DialogWindow}" />
    <Style BasedOn="{StaticResource GridBaseStyle}" TargetType="{x:Type Grid}" />
    <Style BasedOn="{StaticResource TextBoxBaseStyle}" TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}" />
    <Style BasedOn="{StaticResource LabelBaseStyle}" TargetType="{x:Type Label}" />
    <Style BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="{x:Type CheckBox}" />
    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="{x:Type ListBoxItem}" />
    <Style BasedOn="{StaticResource ContextMenuStyle}" TargetType="{x:Type ContextMenu}" />

</ResourceDictionary>